{"version":3,"sources":["components/Rates.jsx","App.js","index.js"],"names":["Rates","useState","rates","setRates","base","setBase","target","setTarget","amount","setAmount","converted","setConverted","getCurrencies","Object","keys","useEffect","a","fetch","response","json","data","console","error","fetchRates","Container","Row","Col","Dropdown","onSelect","e","currency","Toggle","id","variant","Menu","map","c","i","Item","key","eventKey","className","type","placeholder","onChange","event","value","Button","onClick","toFixed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUA8FeA,EA1FD,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAEMF,mBAAS,OAFf,mBAEXG,EAFW,KAELC,EAFK,OAGUJ,mBAAS,OAHnB,mBAGXK,EAHW,KAGHC,EAHG,OAIUN,mBAAS,GAJnB,mBAIXO,EAJW,KAIHC,EAJG,OAKgBR,mBAAS,GALzB,mBAKXS,EALW,KAKAC,EALA,KAsBlB,SAASC,IACP,OAAOC,OAAOC,KAAKZ,GAmBrB,OAnCAa,qBAAU,WAAM,4CACd,8BAAAC,EAAA,+EAE2BC,IAAM,+CAAD,OACqBb,IAHrD,cAEUc,EAFV,gBAKuBA,EAASC,OALhC,OAKUC,EALV,OAMIjB,EAASiB,EAAKlB,OANlB,kDAQImB,QAAQC,MAAR,MARJ,2DADc,uBAAC,WAAD,wBAYdC,KACC,CAACnB,IAuBF,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,6BACE,2EAA6CtB,EAA7C,QAEA,kBAACuB,EAAA,EAAD,CAAUC,SAAU,SAACC,GAAD,OAjBFC,EAiB4BD,EAhBtDlB,EAAa,QACbN,EAAQyB,GAFV,IAA4BA,IAkBhB,kBAACH,EAAA,EAASI,OAAV,CAAiBC,GAAG,iBAAiBC,QAAQ,qBAA7C,0BAIA,kBAACN,EAAA,EAASO,KAAV,KACGtB,IAAgBuB,KAAI,SAACC,EAAGC,GAAJ,OACnB,kBAACV,EAAA,EAASW,KAAV,CAAeC,IAAKF,EAAGG,SAAUJ,GAAIA,QAK3C,2BACEK,UAAU,MACVC,KAAK,OACLC,YAAW,2BAAsBnC,GACjCoC,SAAU,SAACf,GAAD,OA5BAgB,EA4BoBhB,EA3BxClB,EAAa,QACbF,EAAUoC,EAAMvC,OAAOwC,OAFzB,IAAsBD,KA8BZ,6BACA,4EAA8CvC,EAA9C,MACCM,IAAgBuB,KAAI,SAACC,EAAGC,GAAJ,OACnB,kBAACU,EAAA,EAAD,CACER,IAAKF,EACLI,UAAU,MACVR,QAAQ,eACRe,QAAS,kBAhDclB,EAgDoBM,EA/CvDzB,EAAa,GACbJ,EAAUuB,QACVnB,GAAcT,EAAM4B,GAAYtB,GAAQyC,QAAQ,IAHlD,IAAqCnB,IAkDtBM,QAIF1B,GACD,wBAAI+B,UAAU,QAAd,UAAyBjC,EAAS,IAAMJ,EAAxC,eAAmDE,EAAnD,gBAAiEI,SC1EhEwC,MARf,WACE,OACE,yBAAKT,UAAU,OACX,kBAAC,EAAD,QCARU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d3936961.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetch from \"node-fetch\";\nimport { Container, Row, Col, Button, Dropdown } from \"react-bootstrap\";\n\nconst Rates = () => {\n  const [rates, setRates] = useState([]);\n  const [base, setBase] = useState(\"EUR\");\n  const [target, setTarget] = useState(\"EUR\");\n  const [amount, setAmount] = useState(0);\n  const [converted, setConverted] = useState(0);\n\n  useEffect(() => {\n    async function fetchRates() {\n      try {\n        const response = await fetch(\n          `https://api.exchangeratesapi.io/latest?base=${base}`\n        );\n        const data = await response.json();\n        setRates(data.rates);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    fetchRates();\n  }, [base]);\n\n  function getCurrencies() {\n    return Object.keys(rates);\n  }\n\n  function changeCurrentTargetCurrency(currency) {\n    setConverted(0);\n    setTarget(currency);\n    setConverted((rates[currency] * amount).toFixed(2));\n  }\n\n  function changeBaseCurrency(currency) {\n    setConverted(0);\n    setBase(currency);\n  }\n\n  function changeAmount(event) {\n    setConverted(0);\n    setAmount(event.target.value);\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <div>\n            <h3>{`Currency converter (currently set as ${base}): `}</h3>\n\n            <Dropdown onSelect={(e) => changeBaseCurrency(e)}>\n              <Dropdown.Toggle id=\"dropdown-basic\" variant=\"outline-secondary\">\n                Select a base currency\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                {getCurrencies().map((c, i) => (\n                  <Dropdown.Item key={i} eventKey={c}>{c}</Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <input\n              className=\"m-3\"\n              type=\"text\"\n              placeholder={`Enter an amount: ${amount}`}\n              onChange={(e) => changeAmount(e)}\n            />\n            <br />\n            <h6>{`Click the target currency (currently: ${target})`}</h6>\n            {getCurrencies().map((c, i) => (\n              <Button\n                key={i}\n                className=\"m-3\"\n                variant=\"outline-dark\"\n                onClick={() => changeCurrentTargetCurrency(c)}\n              >\n                {c}\n              </Button>\n            ))}\n\n            {!!converted && (\n              <h3 className=\"mt-5\">{`${amount + \" \" + base} in ${target} is: ${converted}`}</h3>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Rates;\n","import React from 'react';\nimport Rates from './components/Rates';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Rates/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}